package kylekewley.garagedooropener.protocolbuffers;// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .//GarageHistoryRequest.proto
import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.SINT32;
import static com.squareup.wire.Message.Datatype.UINT32;

public final class GarageHistoryRequest extends Message {

  public static final Integer DEFAULT_STARTTIME = 0;
  public static final Integer DEFAULT_INTERVAL = 0;

  @ProtoField(tag = 1, type = UINT32)
  public final Integer startTime;

  /**
   * Defined with Epoch time
   */
  @ProtoField(tag = 2, type = SINT32)
  public final Integer interval;

  public GarageHistoryRequest(Integer startTime, Integer interval) {
    this.startTime = startTime;
    this.interval = interval;
  }

  private GarageHistoryRequest(Builder builder) {
    this(builder.startTime, builder.interval);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GarageHistoryRequest)) return false;
    GarageHistoryRequest o = (GarageHistoryRequest) other;
    return equals(startTime, o.startTime)
        && equals(interval, o.interval);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = startTime != null ? startTime.hashCode() : 0;
      result = result * 37 + (interval != null ? interval.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GarageHistoryRequest> {

    public Integer startTime;
    public Integer interval;

    public Builder() {
    }

    public Builder(GarageHistoryRequest message) {
      super(message);
      if (message == null) return;
      this.startTime = message.startTime;
      this.interval = message.interval;
    }

    public Builder startTime(Integer startTime) {
      this.startTime = startTime;
      return this;
    }

    /**
     * Defined with Epoch time
     */
    public Builder interval(Integer interval) {
      this.interval = interval;
      return this;
    }

    @Override
    public GarageHistoryRequest build() {
      return new GarageHistoryRequest(this);
    }
  }
}
