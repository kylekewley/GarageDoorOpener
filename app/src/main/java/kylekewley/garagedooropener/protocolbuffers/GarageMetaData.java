// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .//GarageMetaData.proto
import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class GarageMetaData extends Message {

  public static final List<GarageDoor> DEFAULT_DOORS = Collections.emptyList();

  @ProtoField(tag = 1, label = REPEATED)
  public final List<GarageDoor> doors;

  public GarageMetaData(List<GarageDoor> doors) {
    this.doors = immutableCopyOf(doors);
  }

  private GarageMetaData(Builder builder) {
    this(builder.doors);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GarageMetaData)) return false;
    return equals(doors, ((GarageMetaData) other).doors);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = doors != null ? doors.hashCode() : 1);
  }

  public static final class Builder extends Message.Builder<GarageMetaData> {

    public List<GarageDoor> doors;

    public Builder() {
    }

    public Builder(GarageMetaData message) {
      super(message);
      if (message == null) return;
      this.doors = copyOf(message.doors);
    }

    public Builder doors(List<GarageDoor> doors) {
      this.doors = checkForNulls(doors);
      return this;
    }

    @Override
    public GarageMetaData build() {
      return new GarageMetaData(this);
    }
  }

  public static final class GarageDoor extends Message {

    public static final String DEFAULT_DOORNAME = "";
    public static final Integer DEFAULT_POSITIONID = 0;

    @ProtoField(tag = 1, type = STRING, label = REQUIRED)
    public final String doorName;

    @ProtoField(tag = 2, type = UINT32, label = REQUIRED)
    public final Integer positionId;

    public GarageDoor(String doorName, Integer positionId) {
      this.doorName = doorName;
      this.positionId = positionId;
    }

    private GarageDoor(Builder builder) {
      this(builder.doorName, builder.positionId);
      setBuilder(builder);
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof GarageDoor)) return false;
      GarageDoor o = (GarageDoor) other;
      return equals(doorName, o.doorName)
          && equals(positionId, o.positionId);
    }

    @Override
    public int hashCode() {
      int result = hashCode;
      if (result == 0) {
        result = doorName != null ? doorName.hashCode() : 0;
        result = result * 37 + (positionId != null ? positionId.hashCode() : 0);
        hashCode = result;
      }
      return result;
    }

    public static final class Builder extends Message.Builder<GarageDoor> {

      public String doorName;
      public Integer positionId;

      public Builder() {
      }

      public Builder(GarageDoor message) {
        super(message);
        if (message == null) return;
        this.doorName = message.doorName;
        this.positionId = message.positionId;
      }

      public Builder doorName(String doorName) {
        this.doorName = doorName;
        return this;
      }

      public Builder positionId(Integer positionId) {
        this.positionId = positionId;
        return this;
      }

      @Override
      public GarageDoor build() {
        checkRequiredFields();
        return new GarageDoor(this);
      }
    }
  }
}
