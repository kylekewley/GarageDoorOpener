// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Programming/C++/GarageServer/ProtocolBuffers/GarageStatus.proto
import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class GarageStatus extends Message {

  public static final Integer DEFAULT_GARAGEID = 0;
  public static final Long DEFAULT_TIMESTAMP = 0L;
  public static final Boolean DEFAULT_ISCLOSED = false;

  @ProtoField(tag = 1, type = UINT32, label = REQUIRED)
  public final Integer garageId;

  @ProtoField(tag = 2, type = UINT64, label = REQUIRED)
  public final Long timestamp;

  /**
   * Seconds since Jan 1, 1970 UTC
   */
  @ProtoField(tag = 3, type = BOOL, label = REQUIRED)
  public final Boolean isClosed;

  public GarageStatus(Integer garageId, Long timestamp, Boolean isClosed) {
    this.garageId = garageId;
    this.timestamp = timestamp;
    this.isClosed = isClosed;
  }

  private GarageStatus(Builder builder) {
    this(builder.garageId, builder.timestamp, builder.isClosed);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GarageStatus)) return false;
    GarageStatus o = (GarageStatus) other;
    return equals(garageId, o.garageId)
        && equals(timestamp, o.timestamp)
        && equals(isClosed, o.isClosed);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = garageId != null ? garageId.hashCode() : 0;
      result = result * 37 + (timestamp != null ? timestamp.hashCode() : 0);
      result = result * 37 + (isClosed != null ? isClosed.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GarageStatus> {

    public Integer garageId;
    public Long timestamp;
    public Boolean isClosed;

    public Builder() {
    }

    public Builder(GarageStatus message) {
      super(message);
      if (message == null) return;
      this.garageId = message.garageId;
      this.timestamp = message.timestamp;
      this.isClosed = message.isClosed;
    }

    public Builder garageId(Integer garageId) {
      this.garageId = garageId;
      return this;
    }

    public Builder timestamp(Long timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    /**
     * Seconds since Jan 1, 1970 UTC
     */
    public Builder isClosed(Boolean isClosed) {
      this.isClosed = isClosed;
      return this;
    }

    @Override
    public GarageStatus build() {
      checkRequiredFields();
      return new GarageStatus(this);
    }
  }
}
