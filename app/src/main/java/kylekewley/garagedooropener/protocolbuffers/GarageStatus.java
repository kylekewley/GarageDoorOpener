package kylekewley.garagedooropener.protocolbuffers;// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .//GarageStatus.proto
import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class GarageStatus extends Message {

  public static final List<DoorStatus> DEFAULT_DOORS = Collections.emptyList();

  @ProtoField(tag = 1, label = REPEATED)
  public final List<DoorStatus> doors;

  public GarageStatus(List<DoorStatus> doors) {
    this.doors = immutableCopyOf(doors);
  }

  private GarageStatus(Builder builder) {
    this(builder.doors);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GarageStatus)) return false;
    return equals(doors, ((GarageStatus) other).doors);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = doors != null ? doors.hashCode() : 1);
  }

  public static final class Builder extends Message.Builder<GarageStatus> {

    public List<DoorStatus> doors;

    public Builder() {
    }

    public Builder(GarageStatus message) {
      super(message);
      if (message == null) return;
      this.doors = copyOf(message.doors);
    }

    public Builder doors(List<DoorStatus> doors) {
      this.doors = checkForNulls(doors);
      return this;
    }

    @Override
    public GarageStatus build() {
      return new GarageStatus(this);
    }
  }

  public static final class DoorStatus extends Message {

    public static final Integer DEFAULT_GARAGEID = 0;
    public static final Integer DEFAULT_TIMESTAMP = 0;
    public static final Boolean DEFAULT_ISCLOSED = false;
    public static final Integer DEFAULT_UNIQUEID = 0;

    @ProtoField(tag = 1, type = UINT32, label = REQUIRED)
    public final Integer garageId;

    @ProtoField(tag = 2, type = UINT32, label = REQUIRED)
    public final Integer timestamp;

    /**
     * Seconds since Jan 1, 1970 UTC
     */
    @ProtoField(tag = 3, type = BOOL, label = REQUIRED)
    public final Boolean isClosed;

    @ProtoField(tag = 4, type = UINT32)
    public final Integer uniqueId;

    public DoorStatus(Integer garageId, Integer timestamp, Boolean isClosed, Integer uniqueId) {
      this.garageId = garageId;
      this.timestamp = timestamp;
      this.isClosed = isClosed;
      this.uniqueId = uniqueId;
    }

    private DoorStatus(Builder builder) {
      this(builder.garageId, builder.timestamp, builder.isClosed, builder.uniqueId);
      setBuilder(builder);
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof DoorStatus)) return false;
      DoorStatus o = (DoorStatus) other;
      return equals(garageId, o.garageId)
          && equals(timestamp, o.timestamp)
          && equals(isClosed, o.isClosed)
          && equals(uniqueId, o.uniqueId);
    }

    @Override
    public int hashCode() {
      int result = hashCode;
      if (result == 0) {
        result = garageId != null ? garageId.hashCode() : 0;
        result = result * 37 + (timestamp != null ? timestamp.hashCode() : 0);
        result = result * 37 + (isClosed != null ? isClosed.hashCode() : 0);
        result = result * 37 + (uniqueId != null ? uniqueId.hashCode() : 0);
        hashCode = result;
      }
      return result;
    }

    public static final class Builder extends Message.Builder<DoorStatus> {

      public Integer garageId;
      public Integer timestamp;
      public Boolean isClosed;
      public Integer uniqueId;

      public Builder() {
      }

      public Builder(DoorStatus message) {
        super(message);
        if (message == null) return;
        this.garageId = message.garageId;
        this.timestamp = message.timestamp;
        this.isClosed = message.isClosed;
        this.uniqueId = message.uniqueId;
      }

      public Builder garageId(Integer garageId) {
        this.garageId = garageId;
        return this;
      }

      public Builder timestamp(Integer timestamp) {
        this.timestamp = timestamp;
        return this;
      }

      /**
       * Seconds since Jan 1, 1970 UTC
       */
      public Builder isClosed(Boolean isClosed) {
        this.isClosed = isClosed;
        return this;
      }

      public Builder uniqueId(Integer uniqueId) {
        this.uniqueId = uniqueId;
        return this;
      }

      @Override
      public DoorStatus build() {
        checkRequiredFields();
        return new DoorStatus(this);
      }
    }
  }
}
